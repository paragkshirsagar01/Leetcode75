700. Search in a Binary Search Tree

You are given the root of a binary search tree (BST) and an integer val.

Find the node in the BST that the node's value equals val and return the subtree rooted with that node. If such a node does not exist, return null.


class Solution {
    TreeNode treenode=null;
    public void search(TreeNode root,int val){
        if(root==null){
            return;
        }
        if(root.val==val){
            treenode=root;
            return;
        }
        if(root.left!=null){
            search(root.left,val);
        }
        if(root.right!=null){
            search(root.right,val);
        }
    }
    public TreeNode searchBST(TreeNode root, int val) {
        treenode=null;
        search(root,val);
        return treenode;
    }
}
