/*
872. Leaf-Similar Trees
Consider all the leaves of a binary tree, from left to right order, the values of those leaves form a leaf value sequence.
https://leetcode.com/problems/leaf-similar-trees/description/?envType=study-plan-v2&envId=leetcode-75
*/

class Solution {
    LinkedList<Integer> arr=new LinkedList<>();
    boolean ans; 
    public void traverse(TreeNode root,boolean flag){
        if(root==null){
            return;
        }
        if(ans==false){return;}
        if(root.left==null && root.right==null){
            if(flag==true){
                arr.add(root.val);
            }else{
                if(!arr.isEmpty()){
                    if(root.val!=arr.pop()){
                        ans=false;
                        return;
                    }
                }else if(arr.isEmpty()){
                    arr.add(root.val);
                    flag=false;
                }
            }
        }
        if(root.left!=null){
            traverse(root.left,flag);
        }
        if(root.right!=null){
            traverse(root.right,flag);
        }
    }
    public boolean leafSimilar(TreeNode root1, TreeNode root2) {
        ans=true;
        traverse(root1,true);
        traverse(root2,false);
        if(arr.size()>0){return false;}
        return ans;
    }
